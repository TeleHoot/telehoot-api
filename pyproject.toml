[project]
name = "telehoot-api"
version = "0.1.0"
description = "Api for TeleHoot"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.15.1",
    "asyncpg>=0.30.0",
    "fastapi[standard]>=0.115.11",
    "greenlet>=3.1.1",
    "pydantic-settings>=2.8.1",
    "sqlalchemy>=2.0.39",
    "uuid-v7>=1.0.0",
    "uvicorn>=0.34.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright[nodejs]>=1.1.397",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=6.0.0",
    "ruff>=0.11.1",
]

[tool.ruff]
# Set the maximum line length to 79.
line-length = 79

# Assume Python 3.11
target-version = "py313"

# Exclude a variety of commonly ignored directories.
exclude = [
    "alembic",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
extend-select = ["E501"]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I", "C", "B", "W"]
ignore = ["C408"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra"
]
testpaths = [
    "tests",
    "integration",
]
pythonpath = [
    ".", "tests"
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.pyright]
venvPath = "."
venv = ".venv"
ignore = ["alembic/versions/**"]
